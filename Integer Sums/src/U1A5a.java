/*
 * Raj Shah
 * ICS 4UE
 * August 3, 2023
 * P. Diakoloukas
 * Program description: This program will have the ability to store and
 * display integer values in an array. The program can add or remove numbers, 
 * list the numbers, and get the sum of all numbers, even numbers, or odd 
 * numbers. NOTE: ArrayLists were used for this program.
 */

/**
 *
 * @author Raj
 */

import java.util.ArrayList;

public class U1A5a extends javax.swing.JFrame {

    /**
     * Creates new form U1A5a
     */
    public U1A5a() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        listBtn = new javax.swing.JButton();
        sumAllBtn = new javax.swing.JButton();
        sumEvenBtn = new javax.swing.JButton();
        sumOddBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        myTextArea = new javax.swing.JTextArea();
        finalTextBox = new javax.swing.JTextField();
        userInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Mukta Mahee", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Integer Sums");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setText("Enter an Integer: ");

        addBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        removeBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        removeBtn.setText("Remove");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        listBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        listBtn.setText("List");
        listBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBtnActionPerformed(evt);
            }
        });

        sumAllBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        sumAllBtn.setText("Sum All");
        sumAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumAllBtnActionPerformed(evt);
            }
        });

        sumEvenBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        sumEvenBtn.setText("Sum Even");
        sumEvenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumEvenBtnActionPerformed(evt);
            }
        });

        sumOddBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        sumOddBtn.setText("Sum Odd");
        sumOddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumOddBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        myTextArea.setEditable(false);
        myTextArea.setColumns(20);
        myTextArea.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        myTextArea.setRows(5);
        jScrollPane1.setViewportView(myTextArea);

        finalTextBox.setEditable(false);
        finalTextBox.setFont(new java.awt.Font("Helvetica Neue", 0, 22)); // NOI18N
        finalTextBox.setForeground(new java.awt.Color(0, 0, 204));
        finalTextBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        userInput.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(finalTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addGap(18, 18, 18)
                        .addComponent(removeBtn)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(listBtn)
                        .addGap(140, 140, 140))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sumEvenBtn)
                            .addComponent(sumAllBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sumOddBtn, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(86, 86, 86)
                        .addComponent(exitBtn)
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addBtn)
                    .addComponent(removeBtn)
                    .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listBtn)
                        .addGap(64, 64, 64)
                        .addComponent(sumAllBtn)
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sumEvenBtn)
                            .addComponent(exitBtn))
                        .addGap(50, 50, 50)
                        .addComponent(sumOddBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(finalTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // initialize empty array
    ArrayList<Integer> numbers = new ArrayList<>(); 
    
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        String amountIn = userInput.getText(); // get user input
        
        // check for correct input
        try {
            int userInt = Integer.parseInt(amountIn); // convert to int
            if (userInt < 0) {
                throw new RuntimeException();
                // this error is thrown intentionally to give error message
               
            }
            if (numbers.size() < 20) { // check for index in range
                numbers.add(userInt); // add to array
                finalTextBox.setText("Successfully Added!");
            }
            else {
                finalTextBox.setText("Index out of range, please remove a number"); 
            }
          
            
        } catch (Exception e) {
            finalTextBox.setText("Incorrect Input"); // inform user about incorrect input
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:
        String amountIn = userInput.getText(); // get user input
        
        // check for correct input
        try {
            int userInt = Integer.parseInt(amountIn); // convert to int
            if (userInt < 0) {
                throw new RuntimeException();
                // this error is thrown intentionally to give error message
               
            }
            
            for (int i = 0; i < numbers.size(); i++) {
                if (numbers.get(i) == userInt) {
                    numbers.remove(i); // find number and remove it
                    finalTextBox.setText("Successfully Removed!");
                    return; // exit method
                }    
            }
            
            finalTextBox.setText("Number does not exist!"); // inform user about incorrect input
        }
        catch (Exception e) {
            finalTextBox.setText("Incorrect Input"); // inform user about incorrect input
            
        }
    }//GEN-LAST:event_removeBtnActionPerformed

    private void listBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBtnActionPerformed
        // TODO add your handling code here:
        
        myTextArea.setText(""); // reset text area
        for (int i = 0; i < numbers.size(); i ++) { // iterate through array 
            String number = String.valueOf(numbers.get(i)); // convert to string
            myTextArea.append(number + "\n"); // add to text area
            
        }
    }//GEN-LAST:event_listBtnActionPerformed

    private void sumAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumAllBtnActionPerformed
        // TODO add your handling code here:
        
        myTextArea.setText(""); // reset text area
        int sumAll = 0; // initialize sum
        
        for (int i = 0; i < numbers.size(); i ++) { // iterate through array 
            sumAll += numbers.get(i); // increment sum
            
            String number = String.valueOf(numbers.get(i)); // convert to string
            myTextArea.append(number + "\n"); // add to text area
            
        }
        String sumAll_s = String.valueOf(sumAll); // convert to string
        finalTextBox.setText("The sum of all numbers is: " + sumAll_s);
        
    }//GEN-LAST:event_sumAllBtnActionPerformed

    private void sumEvenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumEvenBtnActionPerformed
        // TODO add your handling code here:
        
        myTextArea.setText(""); // reset text area
        int sumEven = 0; // initialize sum
        
        for (int i = 0; i < numbers.size(); i ++) { // iterate through array 
            
            if (numbers.get(i) % 2 == 0) { // check for even number
                sumEven += numbers.get(i); // increment sum
                String number = String.valueOf(numbers.get(i)); // convert to string
                myTextArea.append(number + "\n"); // add to text area
            }
        }
        String sumEven_s = String.valueOf(sumEven); // convert to string
        finalTextBox.setText("The sum of all even numbers is: " + sumEven_s);
    }//GEN-LAST:event_sumEvenBtnActionPerformed

    private void sumOddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumOddBtnActionPerformed
        // TODO add your handling code here:
        
        myTextArea.setText(""); // reset text area
        int sumOdd = 0; // initialize sum
        
        for (int i = 0; i < numbers.size(); i ++) { // iterate through array 
            
            if (numbers.get(i) % 2 == 1) { // check for odd number
                sumOdd += numbers.get(i); // increment sum
                String number = String.valueOf(numbers.get(i)); // convert to string
                myTextArea.append(number + "\n"); // add to text area
            }
        }
        String sumOdd_s = String.valueOf(sumOdd); // convert to string
        finalTextBox.setText("The sum of all odd numbers is: " + sumOdd_s);
    }//GEN-LAST:event_sumOddBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0); // Exit the program
    }//GEN-LAST:event_exitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(U1A5a.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(U1A5a.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(U1A5a.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(U1A5a.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new U1A5a().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTextField finalTextBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listBtn;
    private javax.swing.JTextArea myTextArea;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton sumAllBtn;
    private javax.swing.JButton sumEvenBtn;
    private javax.swing.JButton sumOddBtn;
    private javax.swing.JTextField userInput;
    // End of variables declaration//GEN-END:variables
}
